---
title: "Data Publication of BRIWECS Consortium"
date: "`r Sys.Date()`"
chunk_output_type: console
html-math-method: katex
number-sections: true
toc: true
toc-expand: 4
toc-depth: 4
toc-location: left
crossref:
  eq-prefix: Eq.
format:
 html:
  embed-resources: true
---

```{r setup, include=FALSE,echo=F,message=FALSE}
# knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
pacman::p_load(ggplot2,dplyr,ggridges,tidyr,lubridate)
unit<- xlsx::read.xlsx("metadata/Unit.xlsx",sheetIndex = 1) %>% 
  mutate(unit=case_when(is.na(unit)~" ",
                        grepl("\\#",unit)~gsub("\\#","Nbr.",unit),
                        T~unit),
         
         xlabel=case_when(unit==" "~trait,
                          T~paste0(trait,"\n(",unit,")")))
complete_dat <- read.csv2("output/BRIWECS_data_publication.csv") %>% 
  mutate(across(BBCH59:Protein_yield,as.numeric),
         Environment = paste(Location, Year, sep = "_")) %>% 
  tidyr::separate(Treatment,into=c("Nitrogen","Fungicide","Water_availability"))

illu  <-  complete_dat %>% 
  group_by(BRISONr, Environment) %>% 
  summarize(across(BBCH59:Protein_yield,function(x) mean(x, na.rm = TRUE))) %>% 
  ungroup() %>% 
  mutate_all(~ifelse(is.nan(.), NA, .)) 


tr.vec <- c("Seedyield","Seedyield_bio","Biomass_bio",
            "Harvest_Index_bio","TGW","TGW_bio","Spike_number_bio","Plantheight_bio")
phen.vec <- c("Emergence_date","BBCH59","BBCH87")
path.vec <- c("Stripe_rust","Powdery_mildew","Leaf_rust","Septoria","DTR","Fusarium")
yq.vec <- c("Sedimentation","Falling_number","Crude_protein","Protein_yield")
distri_plot<- function(complete_dat,tr){
  ggplot(complete_dat) +
    aes(x = .data[[tr]], y = Environment, fill = interaction(Nitrogen,Fungicide)) +
    theme_classic() +
    ggh4x::facet_nested(~Water_availability,nest_line = TRUE)+
    theme(legend.position = "bottom",strip.background = element_blank()) +
    geom_density_ridges(   
      alpha = 0.75,
      jittered_points = TRUE,
      position = "raincloud",
      point_size = 0.05,
      point_alpha = 0.2,
      scale=.8
      # alpha = 0.5,
      #                         size=.8,
      #                         scale=1,# height
      #                         rel_min_height=0.005
    ) +
    scale_fill_brewer(palette = "Set1") +
    scale_y_discrete(drop=FALSE) +
    xlab(with(unit,xlabel[match(tr,trait)]))+
    ylab("Location x Year")
}
cor_plot <- function(illu,tr){
  illu_cor <- illu%>% 
    dplyr::select(all_of(c(tr,"Environment","BRISONr"))) %>% 
    tidyr::pivot_wider(names_from = Environment, values_from = tr) %>%
    dplyr::select(-BRISONr) %>%
    dplyr::select(order(colnames(.))) %>% 
    cor(., use = "pairwise.complete.obs")
  ggcorrplot::ggcorrplot(illu_cor) +
    ggtitle(tr) +
    theme_minimal() +
    guides(x = guide_axis(angle = 45)) +
    paletteer::scale_fill_paletteer_c(palette = "scico::bam", limits = c(-1, 1)) +
    xlab("") +
    ylab("")
}

#weather_import
weather_dat <- list.files(path = "data/weather",
                          pattern="*.csv",
                          full.names = T) %>%
  purrr::map_df(~read.csv2(.)) %>% 
  mutate(Date=lubridate::as_date(Date))

#weather_transform
season_join <- tidyr::expand_grid(Year = 2015:2020,
                                  Date = seq(from = lubridate::as_date("2014-09-01"),
                                             to = lubridate::as_date("2015-08-31"), by = 1)) %>% 
  mutate(Month = lubridate::month(Date),
         Date = ifelse(Month <= 8, `year<-`(Date, Year), `year<-`(Date, Year - 1)),
         Date = as_date(Date)) %>% 
  dplyr::select(-Month)

sowing_date <- complete_dat %>% 
  dplyr::select(Location, Year, Sowing_date) %>% 
  mutate(Date = as_date(paste(Year - 1, "01", "01", sep = "-")),
         Sowing_date = Date + Sowing_date) %>% 
  dplyr::select(Location, Year, Sowing_date) %>% 
  group_by(Location, Year) %>% 
  summarize(Sowing_date = mean(Sowing_date, na.rm = TRUE)) %>% 
  suppressMessages() %>% 
  ungroup()

weather_dat <- weather_dat %>% 
  left_join(season_join,"Date") %>% 
  left_join(sowing_date,by=c("Location","Year")) %>% 
  mutate(Month = month(Date)) %>% 
  filter(!is.na(Sowing_date),
         Month != 7,
         Month != 8,
         Date > Sowing_date)
```

## Yield and Yield Components

```{r,warning=FALSE, message=FALSE}
#| echo: false
#| output: asis

for (tr in tr.vec) {
  # if (!tr=="Seedyield_bio"){
  cat(
    sprintf(
      "### `%s` ", #(@fig-%s-dp)(@fig-%s-cp)
      tr,
      tr,tr
    ),
    sep = "\n"
  ) 
  # }else{
  #   cat(
  #     sprintf(
  #       "### `%s` ", #(@fig-%s-dp)(@fig-%s-cp)(@fig-%s-cpp)
  #       tr,
  #       tr,tr,tr
  #     ),
  #     sep = "\n"
  #   ) 
  # }
  
  dp <- distri_plot(complete_dat,tr) %>% suppressWarnings() %>% suppressMessages()
  cp <- cor_plot(illu,tr) %>%  suppressWarnings() %>% suppressMessages()
  cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
    "```{r}",
    "#| echo: false",
    sprintf("#| fig-cap: %s-distribution", tr),
    sprintf("#| label: fig-%s-dp", tr),
     "#| fig.asp: 1.2",
    "suppressWarnings(suppressMessages(print(dp)))",
    "```"
  )))
  
  cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
    "```{r}",
    "#| echo: false",
    sprintf("#| fig-cap: %s-correlation", tr),
    sprintf("#| label: fig-%s-cp", tr),
    "#| fig.asp: 1.2",
    
    "cp",
    "```"
  )))
  if (tr=="Seedyield_bio"){
    cpp <-  suppressMessages(
      ggplot(illu) + 
        aes(x = Seedyield*10, y = Seedyield_bio) + 
        ggtitle("Comparison Combine Harvest and Hand Harvest") +
        facet_wrap(~Environment, ncol = 5) +
        theme_minimal() +
        geom_abline(intercept = 0, slope = 1) +
        geom_point(shape = 21, colour = "white", fill = "grey40", stroke = 0.2) +
        geom_smooth(method = "lm", se = FALSE, colour = "orangered2") +
        ggpmisc::stat_poly_eq(aes(label =  paste(..rr.label.., sep = "~~~~")), 
                              parse = TRUE, geom = "text_npc", formula = y~x, size = 4) +
        coord_equal()+
        xlab("Seedyield")+
        NULL
    )
    cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
      "```{r}",
      "#| echo: false",
      sprintf("#| fig-cap: yield vs yield bio-correlation", tr),
      sprintf("#| label: fig-%s-cpp", tr),
      "#| fig.asp: 1.6",
      "suppressWarnings(suppressMessages(print(cpp)))",
      "```"
    )))
  }
  
  
  
}
```

## Phenology

```{r,warning=FALSE, message=FALSE}
#| echo: false
#| output: asis

for (tr in phen.vec) {
  
  cat(
    sprintf(
      "### `%s` ", #(@fig-%s-dp)(@fig-%s-cp)
      tr),
    sep = "\n"
  ) 
  
  dp <- distri_plot(complete_dat,tr) %>% suppressWarnings() %>% suppressMessages()
  
  cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
    "```{r}",
    "#| echo: false",
    sprintf("#| fig-cap: %s-distribution", tr),
    sprintf("#| label: fig-%s-dp", tr),
     "#| fig.asp: 1.2",
    "suppressWarnings(suppressMessages(print(dp)))",
    "```"
  )))
  
  if (!tr=="Emergence_date"){
    cp <- cor_plot(illu,tr) %>%  suppressWarnings() %>% suppressMessages()
    cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
      "```{r}",
      "#| echo: false",
      sprintf("#| fig-cap: %s-correlation", tr),
      sprintf("#| label: fig-%s-cp", tr),
      "#| fig.asp: 1.2",
      "cp",
      "```"
    )))
  }
}
```

## Pathogens

```{r,warning=FALSE, message=FALSE}
#| echo: false
#| output: asis

for (tr in path.vec) {
  
  cat(
    sprintf(
      "### `%s` ", #(@fig-%s-dp)(@fig-%s-cp)
      tr,
      tr,tr
    ),
    sep = "\n"
  ) 
  
  
  dp <- distri_plot(complete_dat,tr) %>% suppressWarnings() %>% suppressMessages()
  
  cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
    "```{r}",
    "#| echo: false",
    sprintf("#| fig-cap: %s-distribution", tr),
    sprintf("#| label: fig-%s-dp", tr),
     "#| fig.asp: 1.2",
    "suppressWarnings(suppressMessages(print(dp)))",
    "```"
  )))
  
}
```

## Yield Quality

```{r,warning=FALSE, message=FALSE}
#| echo: false
#| output: asis

for (tr in yq.vec) {
  
  cat(
    sprintf(
      "### `%s` ", #(@fig-%s-dp)(@fig-%s-cp)
      tr),sep="\n")
  
  dp <- distri_plot(complete_dat,tr) %>% suppressWarnings() %>% suppressMessages()
  
  cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
    "```{r}",
    "#| echo: false",
    sprintf("#| fig-cap: %s-distribution", tr),
    sprintf("#| label: fig-%s-dp", tr),
     "#| fig.asp: 1.2",
    "suppressWarnings(suppressMessages(print(dp)))",
    "```"
  )))
  
  cp <- cor_plot(illu,tr) %>%  suppressWarnings() %>% suppressMessages()
  cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
    "```{r}",
    "#| echo: false",
    sprintf("#| fig-cap: %s-correlation", tr),
    sprintf("#| label: fig-%s-cp", tr),
    "#| fig.asp: 1.2",
    "cp",
    "```"
  )))
  
}
```

## Management

```{r,echo=FALSE,warning=FALSE,message=FALSE}
tr <- "Sowing_date"
cat(
  sprintf(
    "### `%s` ", #(@fig-%s-dp)(@fig-%s-cp)
    tr))

dp <- distri_plot(complete_dat,tr) %>% suppressWarnings() %>% suppressMessages()

cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
  "```{r}",
  "#| echo: false",
  sprintf("#| fig-cap: %s-distribution", tr),
  sprintf("#| label: fig-%s-dp", tr),
   "#| fig.asp: 1.2",
  "suppressWarnings(suppressMessages(print(dp)))",
  "```"
)))
```

<!-- ## Principal Component Analyses to detect problematic data sets -->

<!-- ```{r,echo=FALSE,warning=FALSE,message=FALSE} -->

<!-- #| label: fig-principlecomp" -->

<!-- #|  -->

<!-- reduced_select <- complete_dat %>%  -->

<!--   filter(Nitrogen == "HN",Fungicide=="WF") %>%  -->

<!--   dplyr::select(Environment, Seedyield, Harvest_Index_bio, TGW, Spike_number_bio) %>%  -->

<!--   tidyr::drop_na() %>%  -->

<!--   group_by(Environment) %>%  -->

<!--   summarize_all(.funs = mean) %>%  -->

<!--   ungroup() %>%  -->

<!--   dplyr::select(-Environment) -->

<!-- row.names(reduced_select) <- complete_dat %>%  -->

<!--   filter(Nitrogen == "HN",Fungicide=="WF") %>%  -->

<!--   mutate(Environment = paste(Location, Year, sep = "_")) %>%  -->

<!--   dplyr::select(Environment, Seedyield, Harvest_Index_bio, TGW, Spike_number_bio) %>%  -->

<!--   tidyr::drop_na() %>%  -->

<!--   group_by(Environment) %>%  -->

<!--   summarize_all(.funs = mean) %>%  -->

<!--   ungroup() %>%  -->

<!--   pull(Environment) %>% suppressWarnings() -->

<!-- res.pca <- prcomp(reduced_select, scale = TRUE) %>% suppressWarnings() -->

<!-- # factoextra::fviz_eig(res.pca) -->

<!-- factoextra::fviz_pca_ind(res.pca, -->

<!--                          col.ind = "cos2", # Color by the quality of representation -->

<!--                          gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), -->

<!--                          repel = TRUE     # Avoid text overlapping -->

<!-- ) %>% print() -->

<!-- ``` -->

## Weather

```{r,echo=FALSE,warning=FALSE,message=FALSE}
#| label: fig-precipitation
#Cumulated_Weather_Precipitation
illu <- weather_dat %>% 
  filter(Month < 8,
         Month > 2) %>% 
  group_by(Location, Year) %>% 
  arrange(Date) %>% 
  mutate(Precipitation.Cumsum_mm_d = cumsum(Precipitation_mm_d),
         Date_max = max(Date)) %>% 
  ungroup() %>% 
  mutate(Date_Fake = ifelse(Month <= 8, `year<-`(Date, 2015), `year<-`(Date, 2014)),
         Date_Fake = as_date(Date_Fake),
         Environment = paste(Location, Year, sep = "_"),
         label = ifelse(Date == Date_max, Environment, NA)) %>% 
  group_by(Date_Fake) %>% 
  mutate(Precipitation.Cumsum.Mean_mm_d = mean(Precipitation.Cumsum_mm_d, na.rm = TRUE)) %>% 
  ungroup()

plot_1 <- illu %>% 
  select(Date_Fake,Environment,
         label,Precipitation.Cumsum_mm_d,Precipitation.Cumsum.Mean_mm_d) %>% 
  # filter(!is.na(Precipitation.Cumsum_mm_d),
  #        !is.na(Precipitation.Cumsum.Mean_mm_d)) %>% 
  ggplot() + 
  aes(x = Date_Fake,
      y = Precipitation.Cumsum_mm_d - Precipitation.Cumsum.Mean_mm_d, 
      colour = Environment) +
  ggtitle("March to harvest") +
  theme_classic() +
  theme(plot.margin = margin(0.1, 3, 0.1, 0.1, "cm")) +
  geom_hline(yintercept = 0, colour = "grey", size = 2) +
  geom_line() +
  ggrepel::geom_text_repel(aes(label = label),
                           direction = "y",
                           hjust = 0,
                           size = 3,
                           segment.alpha = .5,
                           nudge_x = 10,
                           segment.linetype = "dotted",
                           xlim = c(-Inf, Inf),
                           max.overlaps = 20) +
  labs(x = "Date",
       y = quote(Precipitation[Cumsum]~Mean~Deviation~~'['*mm*']')) +
  scale_colour_viridis_d(option = "turbo") +
  guides(colour = "none") +
  # scale_x_date(limits = c(ymd("2014-06-30"), ymd("2015-06-30"))) +
  coord_cartesian(
    xlim = c(ymd("2015-03-01"), ymd("2015-06-30")),
    ylim = c(-200, 200),
    clip = "off",
    expand = 0
  ) 

plot_1%>% suppressWarnings()

```

```{r,echo=FALSE,warning=FALSE,message=FALSE}
#| label: fig-globalrad
#Cumulated_Weather_GlobRad
illu <- weather_dat %>% 
  filter(Month < 8,
         Month > 2) %>% 
  group_by(Location, Year) %>% 
  arrange(Date) %>% 
  mutate(Global.Radiation.CumSum_MJ_m2_d = cumsum(Global.Radiation_MJ_m2_d),
         Date_max = max(Date)) %>% 
  ungroup() %>% 
  mutate(Date_Fake = ifelse(Month <= 8, `year<-`(Date, 2015), `year<-`(Date, 2014)),
         Date_Fake = as_date(Date_Fake),
         Environment = paste(Location, Year, sep = "_"),
         label = ifelse(Date == Date_max, Environment, NA)) %>% 
  group_by(Date_Fake) %>% 
  mutate(Global.Radiation.CumSum.Mean_MJ_m2_d = mean(Global.Radiation.CumSum_MJ_m2_d, na.rm = TRUE)) %>% 
  ungroup()

plot_1 <- 
  ggplot(illu) + 
  aes(x = Date_Fake, y = Global.Radiation.CumSum_MJ_m2_d - Global.Radiation.CumSum.Mean_MJ_m2_d, colour = Environment) +
  ggtitle("March to harvest") +
  theme_classic() +
  theme(plot.margin = margin(0.1, 3, 0.1, 0.1, "cm")) +
  geom_hline(yintercept = 0, colour = "grey", size = 2) +
  geom_line() +
  ggrepel::geom_text_repel(aes(label = label),
                           direction = "y",
                           hjust = 0,
                           size = 3,
                           segment.alpha = .5,
                           nudge_x = 10,
                           segment.linetype = "dotted",
                           xlim = c(-Inf, Inf),
                           max.overlaps = 20) +
  labs(x = "Date",
       y = quote(Global~Radiation[Cumsum]~Mean~Deviation~~'['*MJ%.%m^-2*']')) +
  scale_colour_viridis_d(option = "turbo") +
  guides(colour = FALSE) +
  coord_cartesian(
    xlim = c(ymd("2015-03-01"), ymd("2015-06-30")),
    ylim = c(-280, 280),
    clip = "off",
    expand = 0
  ) 

plot_1 %>% suppressWarnings()

```
